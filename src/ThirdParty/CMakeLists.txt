
add_subdirectory(libspeex)
add_subdirectory(zlib-1.2.5)
add_subdirectory(cryptopp)
add_subdirectory(re2)
add_subdirectory(bzip2)
add_subdirectory(jpeglib)
add_subdirectory(lzma)
# add_subdirectory(protobuf-2.6.1/vsprojects)

set(PROJECT_NAME libutilities)

################################################################################
# Source groups
################################################################################
set(src__fmt
        "fmt/chrono.h"
        "fmt/color.h"
        "fmt/compile.h"
        "fmt/core.h"
        "fmt/format-inl.h"
        "fmt/format.cpp"
        "fmt/format.h"
        "fmt/locale.h"
        "fmt/os.h"
        "fmt/ostream.h"
        "fmt/posix.h"
        "fmt/printf.h"
        "fmt/ranges.h"
        )
source_group("src\\fmt" FILES ${src__fmt})

set(src__gumbo
        "gumbo/attribute.c"
        "gumbo/attribute.h"
        "gumbo/char_ref.c"
        "gumbo/char_ref.h"
        "gumbo/char_ref.rl"
        "gumbo/error.c"
        "gumbo/error.h"
        "gumbo/gumbo.h"
        "gumbo/insertion_mode.h"
        "gumbo/parser.c"
        "gumbo/parser.h"
        "gumbo/string_buffer.c"
        "gumbo/string_buffer.h"
        "gumbo/string_piece.c"
        "gumbo/string_piece.h"
        "gumbo/tag.c"
        "gumbo/tag.in"
        "gumbo/tag_enum.h"
        "gumbo/tag_gperf.h"
        "gumbo/tag_sizes.h"
        "gumbo/tag_strings.h"
        "gumbo/token_type.h"
        "gumbo/tokenizer.c"
        "gumbo/tokenizer.h"
        "gumbo/tokenizer_states.h"
        "gumbo/utf8.c"
        "gumbo/utf8.h"
        "gumbo/util.c"
        "gumbo/util.h"
        "gumbo/vector.c"
        "gumbo/vector.h"
        )
source_group("src\\gumbo" FILES ${src__gumbo})

set(src__libcss
        "libcss/select.cpp"
        "libcss/select.h"
        )
source_group("src\\libcss" FILES ${src__libcss})

set(src__libcss__libcss
        "libcss/libcss/computed.h"
        "libcss/libcss/errors.h"
        "libcss/libcss/font_face.h"
        "libcss/libcss/fpmath.h"
        "libcss/libcss/functypes.h"
        "libcss/libcss/hint.h"
        "libcss/libcss/libcss.h"
        "libcss/libcss/properties.h"
        "libcss/libcss/select.h"
        "libcss/libcss/stylesheet.c"
        "libcss/libcss/stylesheet.h"
        "libcss/libcss/stylesheetImpl.h"
        "libcss/libcss/types.h"
        )
source_group("src\\libcss\\libcss" FILES ${src__libcss__libcss})

set(src__libcss__libcss__bytecode
        "libcss/libcss/bytecode/bytecode.h"
        "libcss/libcss/bytecode/opcodes.h"
        )
source_group("src\\libcss\\libcss\\bytecode" FILES ${src__libcss__libcss__bytecode})

set(src__libcss__libcss__charset
        "libcss/libcss/charset/detect.c"
        "libcss/libcss/charset/detect.h"
        )
source_group("src\\libcss\\libcss\\charset" FILES ${src__libcss__libcss__charset})

set(src__libcss__libcss__lex
        "libcss/libcss/lex/lex.c"
        "libcss/libcss/lex/lex.h"
        )
source_group("src\\libcss\\libcss\\lex" FILES ${src__libcss__libcss__lex})

set(src__libcss__libcss__parse
        "libcss/libcss/parse/font_face.c"
        "libcss/libcss/parse/font_face.h"
        "libcss/libcss/parse/important.c"
        "libcss/libcss/parse/important.h"
        "libcss/libcss/parse/language.c"
        "libcss/libcss/parse/language.h"
        "libcss/libcss/parse/mq.c"
        "libcss/libcss/parse/mq.h"
        "libcss/libcss/parse/parse.c"
        "libcss/libcss/parse/parse.h"
        "libcss/libcss/parse/propstrings.c"
        "libcss/libcss/parse/propstrings.h"
        )
source_group("src\\libcss\\libcss\\parse" FILES ${src__libcss__libcss__parse})

set(src__libcss__libcss__parse__properties
        "libcss/libcss/parse/properties/properties.c"
        "libcss/libcss/parse/properties/properties.h"
        )
source_group("src\\libcss\\libcss\\parse\\properties" FILES ${src__libcss__libcss__parse__properties})

set(src__libcss__libcss__select
        "libcss/libcss/select/arena.c"
        "libcss/libcss/select/arena.h"
        "libcss/libcss/select/arena_hash.h"
        "libcss/libcss/select/autogenerated_computed.h"
        "libcss/libcss/select/autogenerated_propget.h"
        "libcss/libcss/select/autogenerated_propset.h"
        "libcss/libcss/select/bloom.h"
        "libcss/libcss/select/computed.c"
        "libcss/libcss/select/computed.h"
        "libcss/libcss/select/dispatch.c"
        "libcss/libcss/select/dispatch.h"
        "libcss/libcss/select/font_face.c"
        "libcss/libcss/select/font_face.h"
        "libcss/libcss/select/hash.c"
        "libcss/libcss/select/hash.h"
        "libcss/libcss/select/mq.h"
        "libcss/libcss/select/propget.h"
        "libcss/libcss/select/propset.h"
        "libcss/libcss/select/select.c"
        "libcss/libcss/select/select.h"
        )
source_group("src\\libcss\\libcss\\select" FILES ${src__libcss__libcss__select})

set(src__libcss__libcss__select__properties
        "libcss/libcss/select/properties/properties.c"
        "libcss/libcss/select/properties/properties.h"
        )
source_group("src\\libcss\\libcss\\select\\properties" FILES ${src__libcss__libcss__select__properties})

set(src__libcss__libcss__utils
        "libcss/libcss/utils/errors.c"
        "libcss/libcss/utils/parserutilserror.h"
        "libcss/libcss/utils/utils.c"
        "libcss/libcss/utils/utils.h"
        )
source_group("src\\libcss\\libcss\\utils" FILES ${src__libcss__libcss__utils})

set(src__libcss__libparserutils
        "libcss/libparserutils/errors.h"
        "libcss/libparserutils/functypes.h"
        "libcss/libparserutils/parserutils.h"
        "libcss/libparserutils/types.h"
        )
source_group("src\\libcss\\libparserutils" FILES ${src__libcss__libparserutils})

set(src__libcss__libparserutils__charset
        "libcss/libparserutils/charset/aliases.c"
        "libcss/libparserutils/charset/aliases.h"
        "libcss/libparserutils/charset/aliases.inc"
        "libcss/libparserutils/charset/codec.c"
        "libcss/libparserutils/charset/codec.h"
        "libcss/libparserutils/charset/mibenum.h"
        "libcss/libparserutils/charset/utf16.h"
        "libcss/libparserutils/charset/utf8.h"
        )
source_group("src\\libcss\\libparserutils\\charset" FILES ${src__libcss__libparserutils__charset})

set(src__libcss__libparserutils__charset__codecs
        "libcss/libparserutils/charset/codecs/8859_tables.h"
        "libcss/libparserutils/charset/codecs/codec_8859.c"
        "libcss/libparserutils/charset/codecs/codec_ascii.c"
        "libcss/libparserutils/charset/codecs/codec_ext8.c"
        "libcss/libparserutils/charset/codecs/codec_impl.h"
        "libcss/libparserutils/charset/codecs/codec_utf16.c"
        "libcss/libparserutils/charset/codecs/codec_utf8.c"
        "libcss/libparserutils/charset/codecs/ext8_tables.h"
        )
source_group("src\\libcss\\libparserutils\\charset\\codecs" FILES ${src__libcss__libparserutils__charset__codecs})

set(src__libcss__libparserutils__charset__encodings
        "libcss/libparserutils/charset/encodings/utf16.c"
        "libcss/libparserutils/charset/encodings/utf8.c"
        "libcss/libparserutils/charset/encodings/utf8impl.h"
        )
source_group("src\\libcss\\libparserutils\\charset\\encodings" FILES ${src__libcss__libparserutils__charset__encodings})

set(src__libcss__libparserutils__input
        "libcss/libparserutils/input/filter.c"
        "libcss/libparserutils/input/filter.h"
        "libcss/libparserutils/input/inputstream.c"
        "libcss/libparserutils/input/inputstream.h"
        )
source_group("src\\libcss\\libparserutils\\input" FILES ${src__libcss__libparserutils__input})

set(src__libcss__libparserutils__utils
        "libcss/libparserutils/utils/buffer.h"
        "libcss/libparserutils/utils/endian.h"
        "libcss/libparserutils/utils/stack.h"
        "libcss/libparserutils/utils/utils.c"
        "libcss/libparserutils/utils/utils.h"
        "libcss/libparserutils/utils/vector.h"
        )
source_group("src\\libcss\\libparserutils\\utils" FILES ${src__libcss__libparserutils__utils})

set(src__libcss__libwapcaplet
        "libcss/libwapcaplet/libwapcaplet.c"
        "libcss/libwapcaplet/libwapcaplet.h"
        )
source_group("src\\libcss\\libwapcaplet" FILES ${src__libcss__libwapcaplet})

set(src__lua
        "lua/lapi.c"
        "lua/lapi.h"
        "lua/lauxlib.c"
        "lua/lauxlib.h"
        "lua/lbaselib.c"
        "lua/lbitlib.c"
        "lua/lcode.c"
        "lua/lcode.h"
        "lua/lcorolib.c"
        "lua/lctype.c"
        "lua/lctype.h"
        "lua/ldblib.c"
        "lua/ldebug.c"
        "lua/ldebug.h"
        "lua/ldo.c"
        "lua/ldo.h"
        "lua/ldump.c"
        "lua/lfunc.c"
        "lua/lfunc.h"
        "lua/lgc.c"
        "lua/lgc.h"
        "lua/linit.c"
        "lua/liolib.c"
        "lua/llex.c"
        "lua/llex.h"
        "lua/llimits.h"
        "lua/lmathlib.c"
        "lua/lmem.c"
        "lua/lmem.h"
        "lua/loadlib.c"
        "lua/lobject.c"
        "lua/lobject.h"
        "lua/lopcodes.c"
        "lua/lopcodes.h"
        "lua/loslib.c"
        "lua/lparser.c"
        "lua/lparser.h"
        "lua/lprefix.h"
        "lua/lstate.c"
        "lua/lstate.h"
        "lua/lstring.c"
        "lua/lstring.h"
        "lua/lstrlib.c"
        "lua/ltable.c"
        "lua/ltable.h"
        "lua/ltablib.c"
        "lua/ltm.c"
        "lua/ltm.h"
        "lua/lua.h"
        "lua/lua.hpp"
        "lua/luaconf.h"
        "lua/lualib.h"
        "lua/lundump.c"
        "lua/lundump.h"
        "lua/lutf8lib.c"
        "lua/lvm.c"
        "lua/lvm.h"
        "lua/lzio.c"
        "lua/lzio.h"
        )
source_group("src\\lua" FILES ${src__lua})

set(ALL_FILES
        ${src__fmt}
        ${src__gumbo}
#        ${src__libcss}
#        ${src__libcss__libcss}
#        ${src__libcss__libcss__bytecode}
#        ${src__libcss__libcss__charset}
#        ${src__libcss__libcss__lex}
#        ${src__libcss__libcss__parse}
#        ${src__libcss__libcss__parse__properties}
#        ${src__libcss__libcss__select}
#        ${src__libcss__libcss__select__properties}
#        ${src__libcss__libcss__utils}
#        ${src__libcss__libparserutils}
#        ${src__libcss__libparserutils__charset}
#        ${src__libcss__libparserutils__charset__codecs}
#        ${src__libcss__libparserutils__charset__encodings}
#        ${src__libcss__libparserutils__input}
#        ${src__libcss__libparserutils__utils}
#        ${src__libcss__libwapcaplet}
        ${src__lua}
        )

################################################################################
# Target
################################################################################
add_library(${PROJECT_NAME} STATIC ${ALL_FILES})
set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER "Libs")

use_props(${PROJECT_NAME} "${CMAKE_CONFIGURATION_TYPES}" "${DEFAULT_CXX_PROPS}")
set(ROOT_NAMESPACE libutilities)

set_target_properties(${PROJECT_NAME} PROPERTIES
        VS_GLOBAL_KEYWORD "Win32Proj"
        )
################################################################################
# Target name
################################################################################
set_target_properties(${PROJECT_NAME} PROPERTIES
        TARGET_NAME_DEBUG       "libutilities_d"
        TARGET_NAME_RELEASE     "libutilities"
        )
################################################################################
# Output directory
################################################################################
set_target_properties(${PROJECT_NAME} PROPERTIES
        OUTPUT_DIRECTORY_DEBUG "${MYROOTDIR}/../../../game/bin"
        OUTPUT_DIRECTORY_RELEASE "${MYROOTDIR}/../../../game/bin"
        )
set_target_properties(${PROJECT_NAME} PROPERTIES
        PDB_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR}"
        )
################################################################################
# MSVC runtime library
################################################################################
get_property(MSVC_RUNTIME_LIBRARY_DEFAULT TARGET ${PROJECT_NAME} PROPERTY MSVC_RUNTIME_LIBRARY)
string(CONCAT "MSVC_RUNTIME_LIBRARY_STR"
        MultiThreaded
        )
set_target_properties(${PROJECT_NAME} PROPERTIES MSVC_RUNTIME_LIBRARY ${MSVC_RUNTIME_LIBRARY_STR})

################################################################################
# Include directories
################################################################################
target_include_directories(${PROJECT_NAME} PRIVATE
        "${CMAKE_CURRENT_SOURCE_DIR}/lua;"
        "${CMAKE_SOURCE_DIR}"
        )

################################################################################
# Compile definitions
################################################################################
target_compile_definitions(${PROJECT_NAME} PRIVATE
        "$<$<CONFIG:Debug>:"
        "DEBUG;"
        "_DEBUG;"
        "ZLIB_DEBUG"
        ">"
        "$<$<CONFIG:Development>:"
        "NDEBUG;"
        "_NDEBUG"
        ">"
        "$<$<CONFIG:Release>:"
        "NDEBUG;"
        "_NDEBUG"
        ">"
        "DEV_BUILD;"
        "_DLL_EXT=.dll;"
        "FRAME_POINTER_OMISSION_DISABLED;"
        "_SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING;"
        "WINDOWS_IGNORE_PACKING_MISMATCH;"
        "HAVE_STAT;"
        "HAVE_STDINT_H;"
        "WITHOUT_ICONV_FILTER;"
        "FMT_LOCALE;"
        "LUA_COMPAT_ALL;"
        "LUA_COMPAT_5_1;"
        "NO_STEAM"
        )

################################################################################
# Compile and link options
################################################################################
if(MSVC)
    target_compile_options(${PROJECT_NAME} PRIVATE
            /MP;
            /Gm-;
            /Od;
            /RTC1;
            /Gy;
            /W1;
            ${DEFAULT_CXX_DEBUG_INFORMATION_FORMAT};
            /wd4819;
            ${DEFAULT_CXX_EXCEPTION_HANDLING};
            /diagnostics:caret
            )
    target_link_options(${PROJECT_NAME} PRIVATE
            /SUBSYSTEM:WINDOWS
            )
endif()