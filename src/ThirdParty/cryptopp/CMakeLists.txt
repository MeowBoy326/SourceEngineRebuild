


set(PROJECT_NAME cryptlib)

################################################################################
# Source groups
################################################################################
set(ASM_Files
#    "rdrand.asm"
#    "rdseed.asm"
)
source_group("" FILES ${ASM_Files})

set(Header_Files
    "3way.h"
    "adler32.h"
    "adv_simd.h"
    "aes.h"
    "algebra.h"
    "algparam.h"
    "allocate.h"
    "arc4.h"
    "argnames.h"
    "aria.h"
    "asn.h"
    "authenc.h"
    "base32.h"
    "base64.h"
    "basecode.h"
    "blake2.h"
    "blowfish.h"
    "blumshub.h"
    "camellia.h"
    "cast.h"
    "cbcmac.h"
    "ccm.h"
    "chacha.h"
    "chachapoly.h"
    "cham.h"
    "channels.h"
    "cmac.h"
    "config.h"
    "config_align.h"
    "config_asm.h"
    "config_cpu.h"
    "config_cxx.h"
    "config_dll.h"
    "config_int.h"
    "config_misc.h"
    "config_ns.h"
    "config_os.h"
    "config_ver.h"
    "cpu.h"
    "crc.h"
    "cryptlib.h"
    "darn.h"
    "default.h"
    "des.h"
    "dh.h"
    "dh2.h"
    "dmac.h"
    "donna.h"
    "donna_32.h"
    "donna_64.h"
    "donna_sse.h"
    "drbg.h"
    "dsa.h"
    "eax.h"
    "ec2n.h"
    "eccrypto.h"
    "ecp.h"
    "ecpoint.h"
    "elgamal.h"
    "emsa2.h"
    "eprecomp.h"
    "esign.h"
    "fhmqv.h"
    "files.h"
    "filters.h"
    "fips140.h"
    "fltrimpl.h"
    "gcm.h"
    "gf256.h"
    "gf2_32.h"
    "gf2n.h"
    "gfpcrypt.h"
    "gost.h"
    "gzip.h"
    "hc128.h"
    "hc256.h"
    "hex.h"
    "hight.h"
    "hkdf.h"
    "hmac.h"
    "hmqv.h"
    "hrtimer.h"
    "ida.h"
    "idea.h"
    "integer.h"
    "iterhash.h"
    "kalyna.h"
    "keccak.h"
    "lea.h"
    "lsh.h"
    "lubyrack.h"
    "luc.h"
    "mars.h"
    "md2.h"
    "md4.h"
    "md5.h"
    "mdc.h"
    "misc.h"
    "modarith.h"
    "modes.h"
    "modexppc.h"
    "mqueue.h"
    "mqv.h"
    "naclite.h"
    "nbtheory.h"
    "nr.h"
    "oaep.h"
    "oids.h"
    "osrng.h"
    "padlkrng.h"
    "panama.h"
    "pch.h"
    "pkcspad.h"
    "poly1305.h"
    "polynomi.h"
    "pssr.h"
    "pubkey.h"
    "pwdbased.h"
    "queue.h"
    "rabbit.h"
    "rabin.h"
    "randpool.h"
    "rc2.h"
    "rc5.h"
    "rc6.h"
    "rdrand.h"
    "rijndael.h"
    "ripemd.h"
    "rng.h"
    "rsa.h"
    "rw.h"
    "safer.h"
    "salsa.h"
    "scrypt.h"
    "seal.h"
    "secblock.h"
    "secblockfwd.h"
    "seckey.h"
    "seed.h"
    "serpent.h"
    "sha.h"
    "sha3.h"
    "shacal2.h"
    "shake.h"
    "shark.h"
    "simeck.h"
    "simon.h"
    "simple.h"
    "siphash.h"
    "skipjack.h"
    "sm3.h"
    "sm4.h"
    "smartptr.h"
    "sosemanuk.h"
    "speck.h"
    "square.h"
    "stdcpp.h"
    "strciphr.h"
    "tea.h"
    "threefish.h"
    "tiger.h"
    "trap.h"
    "trunhash.h"
    "ttmac.h"
    "tweetnacl.h"
    "twofish.h"
    "vmac.h"
    "wake.h"
    "whrlpool.h"
    "words.h"
    "xed25519.h"
    "xtr.h"
    "xtrcrypt.h"
    "xts.h"
    "zdeflate.h"
    "zinflate.h"
    "zlib.h"
)
source_group("Header Files" FILES ${Header_Files})

set(Source_Files
    "3way.cpp"
    "adler32.cpp"
    "algebra.cpp"
    "algparam.cpp"
    "allocate.cpp"
    "arc4.cpp"
    "aria.cpp"
    "aria_simd.cpp"
    "ariatab.cpp"
    "asn.cpp"
    "authenc.cpp"
    "base32.cpp"
    "base64.cpp"
    "basecode.cpp"
    "bfinit.cpp"
    "blake2.cpp"
    "blake2b_simd.cpp"
    "blake2s_simd.cpp"
    "blowfish.cpp"
    "blumshub.cpp"
    "camellia.cpp"
    "cast.cpp"
    "casts.cpp"
    "cbcmac.cpp"
    "ccm.cpp"
    "chacha.cpp"
#    "chacha_avx.cpp"
    "chacha_simd.cpp"
    "chachapoly.cpp"
    "cham.cpp"
    "cham_simd.cpp"
    "channels.cpp"
    "cmac.cpp"
    "cpu.cpp"
    "crc.cpp"
    "crc_simd.cpp"
    "cryptlib.cpp"
    "darn.cpp"
    "default.cpp"
    "des.cpp"
    "dessp.cpp"
    "dh.cpp"
    "dh2.cpp"
    "dll.cpp"
    "donna_32.cpp"
    "donna_64.cpp"
    "donna_sse.cpp"
    "dsa.cpp"
    "eax.cpp"
    "ec2n.cpp"
#    "eccrypto.cpp"
    "ecp.cpp"
    "elgamal.cpp"
    "emsa2.cpp"
#    "eprecomp.cpp"
    "esign.cpp"
    "files.cpp"
    "filters.cpp"
    "fips140.cpp"
    "fipstest.cpp"
    "gcm.cpp"
    "gcm_simd.cpp"
    "gf256.cpp"
    "gf2_32.cpp"
    "gf2n.cpp"
    "gf2n_simd.cpp"
    "gfpcrypt.cpp"
    "gost.cpp"
    "gzip.cpp"
    "hc128.cpp"
    "hc256.cpp"
    "hex.cpp"
    "hight.cpp"
    "hmac.cpp"
    "hrtimer.cpp"
    "ida.cpp"
    "idea.cpp"
    "integer.cpp"
    "iterhash.cpp"
    "kalyna.cpp"
    "kalynatab.cpp"
    "keccak.cpp"
    "keccak_core.cpp"
    "keccak_simd.cpp"
    "lea.cpp"
    "lea_simd.cpp"
    "lsh256.cpp"
    "lsh256_avx.cpp"
    "lsh256_sse.cpp"
    "lsh512.cpp"
    "lsh512_avx.cpp"
    "lsh512_sse.cpp"
    "luc.cpp"
    "mars.cpp"
    "marss.cpp"
    "md2.cpp"
    "md4.cpp"
    "md5.cpp"
    "misc.cpp"
    "modes.cpp"
    "mqueue.cpp"
    "mqv.cpp"
    "nbtheory.cpp"
    "oaep.cpp"
    "osrng.cpp"
    "padlkrng.cpp"
    "panama.cpp"
    "pch.cpp"
    "pkcspad.cpp"
    "poly1305.cpp"
    "polynomi.cpp"
    "pssr.cpp"
    "pubkey.cpp"
    "queue.cpp"
    "rabbit.cpp"
    "rabin.cpp"
    "randpool.cpp"
    "rc2.cpp"
    "rc5.cpp"
    "rc6.cpp"
    "rdrand.cpp"
    "rdtables.cpp"
    "rijndael.cpp"
    "rijndael_simd.cpp"
    "ripemd.cpp"
    "rng.cpp"
    "rsa.cpp"
    "rw.cpp"
    "safer.cpp"
    "salsa.cpp"
    "scrypt.cpp"
    "seal.cpp"
    "seed.cpp"
    "serpent.cpp"
    "sha.cpp"
    "sha3.cpp"
    "sha_simd.cpp"
    "shacal2.cpp"
    "shacal2_simd.cpp"
    "shake.cpp"
    "shark.cpp"
    "sharkbox.cpp"
    "simeck.cpp"
    "simon.cpp"
    "simon128_simd.cpp"
    "simple.cpp"
    "skipjack.cpp"
    "sm3.cpp"
    "sm4.cpp"
    "sm4_simd.cpp"
    "sosemanuk.cpp"
    "speck.cpp"
    "speck128_simd.cpp"
    "square.cpp"
    "squaretb.cpp"
    "sse_simd.cpp"
    "strciphr.cpp"
    "tea.cpp"
    "tftables.cpp"
    "threefish.cpp"
    "tiger.cpp"
    "tigertab.cpp"
    "ttmac.cpp"
    "tweetnacl.cpp"
    "twofish.cpp"
    "vmac.cpp"
    "wake.cpp"
    "whrlpool.cpp"
    "xed25519.cpp"
    "xtr.cpp"
    "xtrcrypt.cpp"
    "xts.cpp"
    "zdeflate.cpp"
    "zinflate.cpp"
    "zlib.cpp"
)
source_group("Source Files" FILES ${Source_Files})

set(ALL_FILES
    ${ASM_Files}
    ${Header_Files}
    ${Source_Files}
)

################################################################################
# Target
################################################################################
add_library(${PROJECT_NAME} STATIC ${ALL_FILES})

use_props(${PROJECT_NAME} "${CMAKE_CONFIGURATION_TYPES}" "${DEFAULT_CXX_PROPS}")
################################################################################
# Target name
################################################################################
set_target_properties(${PROJECT_NAME} PROPERTIES
        TARGET_NAME_DEBUG   "cryptlib"
        TARGET_NAME_RELEASE "cryptlib"
        )
################################################################################
# Output directory
################################################################################
set_target_properties(${PROJECT_NAME} PROPERTIES
        OUTPUT_DIRECTORY_DEBUG   "${MYROOTDIR}/../../../game/bin"
        OUTPUT_DIRECTORY_RELEASE "${MYROOTDIR}/../../../game/bin"
        )
################################################################################
# MSVC runtime library
################################################################################
get_property(MSVC_RUNTIME_LIBRARY_DEFAULT TARGET ${PROJECT_NAME} PROPERTY MSVC_RUNTIME_LIBRARY)
string(CONCAT "MSVC_RUNTIME_LIBRARY_STR"
        $<$<CONFIG:Debug>:
        MultiThreadedDebug
        >
        $<$<CONFIG:Release>:
        MultiThreaded
        >
        $<$<NOT:$<OR:$<CONFIG:Debug>,$<CONFIG:Release>>>:${MSVC_RUNTIME_LIBRARY_DEFAULT}>
        )
set_target_properties(${PROJECT_NAME} PROPERTIES MSVC_RUNTIME_LIBRARY ${MSVC_RUNTIME_LIBRARY_STR})

################################################################################
# Include directories
################################################################################
target_include_directories(${PROJECT_NAME} PRIVATE
        "${MYROOTDIR}/common;"
        "${MYROOTDIR}/public;"
        "${MYROOTDIR}/public/tier0;"
        "${MYROOTDIR}/public/tier1"
        )

################################################################################
# Compile definitions
################################################################################
target_compile_definitions(${PROJECT_NAME} PRIVATE
        "$<$<CONFIG:Debug>:"
        "DISABLE_ETW;"
        "_DEBUG;"
        "DEBUG;"
        "_SCL_SECURE_NO_WARNINGS"
        ">"
        "$<$<CONFIG:Release>:"
        "NDEBUG;"
        "_ALLOW_RUNTIME_LIBRARY_MISMATCH;"
        "_ALLOW_ITERATOR_DEBUG_LEVEL_MISMATCH;"
        "_ALLOW_MSC_VER_MISMATCH"
        ">"
        "VPC;"
        "RAD_TELEMETRY_DISABLED;"
        "FRAME_POINTER_OMISSION_DISABLED;"
        "SOURCE1=1;"
        "FUCK_STEAM;"
        "_MBCS"
        )

################################################################################
# Compile and link options
################################################################################
if(MSVC)
    target_compile_options(${PROJECT_NAME} PRIVATE
            $<$<CONFIG:Debug>:
            /Od;
            /ZI
            >
            $<$<CONFIG:Release>:
            /O2;
            /Ob2;
            /Oi;
            /Gy;
            ${DEFAULT_CXX_DEBUG_INFORMATION_FORMAT};
            /Ot;
            /Zo;
            /Oy-
            >
            /MP;
            /permissive;
            /GF;
            /W4;
            /WX-;
            /TP;
            /fp:fast;
            /GR;
            /wd4316;
            /wd4577;
            /wd4091;
            /Gw;
            /Zc:inline;
            /Zc:threadSafeInit-;
            /Wv:18;
            /GS;
            /Zc:wchar_t;
            /Zc:forScope;
            /EHsc;
            )

endif()

